<!DOCTYPE html>
<html lang="hi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>काव्यपथ - हिंदी कविताओं का डिजिटल संग्रह</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        :root {
            --primary-color: #7b1fa2;
            --secondary-color: #9c27b0;
            --accent-color: #e1bee7;
            --text-color: #212121;
            --light-text: #f5f5f5;
            --bg-color: #fafafa;
            --card-color: #ffffff;
            --shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
            --transition: all 0.3s ease-out;
            --border-radius: 12px;
        }
    
        [data-theme="dark"] {
            --primary-color: #ba68c8;
            --secondary-color: #ab47bc;
            --accent-color: #4a148c;
            --text-color: #e0e0e0;
            --light-text: #f5f5f5;
            --bg-color: #121212;
            --card-color: #1e1e1e;
            --shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
        }
    
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
    
        body {
            font-family: 'Montserrat', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: var(--bg-color);
            color: var(--text-color);
            line-height: 1.8;
            transition: background-color 0.5s ease, color 0.5s ease;
            -webkit-font-smoothing: antialiased;
        }
    
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 24px;
        }
    
        /* Header Styles */
        header {
            background-color: var(--primary-color);
            color: var(--light-text);
            padding: 1rem 0;
            box-shadow: var(--shadow);
            position: sticky;
            top: 0;
            z-index: 100;
            backdrop-filter: blur(8px);
            background-color: rgba(123, 31, 162, 0.95);
        }
    
        [data-theme="dark"] header {
            background-color: rgba(30, 30, 30, 0.95);
        }
    
        .header-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
    
        .logo {
            font-size: 2rem;
            font-weight: 700;
            display: flex;
            align-items: center;
            letter-spacing: 0.5px;
            font-family: 'Playfair Display', serif;
        }
    
        .logo i {
            margin-right: 12px;
            color: var(--accent-color);
            font-size: 1.8rem;
        }
    
        nav ul {
            display: flex;
            list-style: none;
        }
    
        nav ul li {
            margin-left: 24px;
            position: relative;
        }
    
        nav ul li a {
            color: var(--light-text);
            text-decoration: none;
            font-weight: 500;
            padding: 8px 0;
            position: relative;
            font-size: 1rem;
            transition: var(--transition);
        }
    
        nav ul li a::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 2px;
            background-color: var(--accent-color);
            transition: var(--transition);
        }
    
        nav ul li a:hover::after {
            width: 100%;
        }
    
        .auth-buttons {
            display: flex;
            align-items: center;
            gap: 12px;
        }
    
        .auth-buttons button {
            background-color: transparent;
            color: var(--light-text);
            border: 2px solid var(--accent-color);
            padding: 8px 20px;
            border-radius: 30px;
            cursor: pointer;
            font-weight: 600;
            transition: var(--transition);
            font-size: 0.95rem;
        }
    
        .auth-buttons button:hover {
            background-color: var(--accent-color);
            color: var(--primary-color);
            transform: translateY(-2px);
        }
    
        .theme-toggle {
            background: none;
            border: none;
            color: var(--light-text);
            font-size: 1.3rem;
            cursor: pointer;
            margin-left: 15px;
            transition: transform 0.3s;
            display: flex;
            align-items: center;
            justify-content: center;
            width: 36px;
            height: 36px;
            border-radius: 50%;
        }
    
        .theme-toggle:hover {
            background-color: rgba(255, 255, 255, 0.1);
            transform: rotate(15deg);
        }
    
        /* Hero Section */
        .hero {
            background: linear-gradient(135deg, rgba(123, 31, 162, 0.9), rgba(156, 39, 176, 0.9)), 
                        url('https://images.unsplash.com/photo-1500382017468-9049fed747ef?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80');
            background-size: cover;
            background-position: center;
            background-attachment: fixed;
            color: white;
            padding: 8rem 0;
            text-align: center;
            position: relative;
            clip-path: polygon(0 0, 100% 0, 100% 90%, 0 100%);
            margin-bottom: -50px;
        }
    
        .hero .container {
            position: relative;
            z-index: 2;
            max-width: 800px;
        }
    
        .hero h1 {
            font-size: 3.5rem;
            margin-bottom: 1.5rem;
            font-weight: 700;
            line-height: 1.2;
            text-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
            font-family: 'Playfair Display', serif;
        }
    
        .hero p {
            font-size: 1.3rem;
            margin: 0 auto 3rem;
            opacity: 0.9;
            max-width: 700px;
        }
    
        .cta-button {
            background-color: var(--accent-color);
            color: var(--primary-color);
            border: none;
            padding: 16px 40px;
            border-radius: 30px;
            cursor: pointer;
            font-size: 1.2rem;
            font-weight: 700;
            transition: var(--transition);
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
            letter-spacing: 0.5px;
            position: relative;
            overflow: hidden;
        }
    
        .cta-button:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
            color: var(--text-color);
        }
    
        .cta-button::after {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
            transition: 0.5s;
        }
    
        .cta-button:hover::after {
            left: 100%;
        }
    
        /* Categories */
        .categories {
            padding: 6rem 0 4rem;
            position: relative;
            z-index: 1;
        }
    
        .section-title {
            text-align: center;
            margin-bottom: 3rem;
            font-size: 2.8rem;
            color: var(--primary-color);
            position: relative;
            display: inline-block;
            font-family: 'Playfair Display', serif;
        }
    
        .section-title::after {
            content: '';
            position: absolute;
            bottom: -12px;
            left: 50%;
            transform: translateX(-50%);
            width: 100px;
            height: 4px;
            background: var(--accent-color);
            border-radius: 2px;
        }
    
        .category-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 30px;
        }
    
        .category-card {
            background-color: var(--card-color);
            border-radius: var(--border-radius);
            padding: 2.5rem 2rem;
            text-align: center;
            box-shadow: var(--shadow);
            cursor: pointer;
            transition: var(--transition);
            border: 1px solid rgba(0, 0, 0, 0.05);
            position: relative;
            overflow: hidden;
        }
    
        .category-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
        }
    
        .category-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 5px;
            background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
        }
    
        .category-card i {
            font-size: 3rem;
            color: var(--primary-color);
            margin-bottom: 1.5rem;
            transition: var(--transition);
        }
    
        .category-card:hover i {
            transform: scale(1.2);
            color: var(--secondary-color);
        }
    
        .category-card h3 {
            font-size: 1.5rem;
            margin-bottom: 1rem;
            font-weight: 600;
        }
    
        .category-card p {
            color: #666;
            font-size: 1rem;
        }
    
        [data-theme="dark"] .category-card p {
            color: #aaa;
        }
    
        /* Poems Section */
        .poems {
            padding: 4rem 0 6rem;
        }
    
        .poem-filters {
            display: flex;
            justify-content: space-between;
            margin-bottom: 3rem;
            flex-wrap: wrap;
            align-items: center;
            gap: 20px;
        }
    
        .search-bar {
            flex: 1;
            min-width: 300px;
            max-width: 500px;
            position: relative;
        }
    
        .search-bar input {
            width: 100%;
            padding: 14px 20px 14px 50px;
            border-radius: 30px;
            border: none;
            background-color: var(--card-color);
            color: var(--text-color);
            font-size: 1rem;
            box-shadow: var(--shadow);
            transition: var(--transition);
        }
    
        .search-bar input:focus {
            outline: none;
            box-shadow: 0 0 0 3px var(--accent-color);
        }
    
        .search-bar i {
            position: absolute;
            left: 20px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--secondary-color);
            font-size: 1.2rem;
        }
    
        .sort-options {
            display: flex;
            align-items: center;
            gap: 10px;
        }
    
        .sort-options span {
            font-weight: 500;
            white-space: nowrap;
        }
    
        .sort-options select {
            padding: 12px 20px;
            border-radius: 30px;
            border: none;
            background-color: var(--card-color);
            color: var(--text-color);
            font-size: 1rem;
            cursor: pointer;
            box-shadow: var(--shadow);
            transition: var(--transition);
            appearance: none;
            background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%239C27B0'%3e%3cpath d='M7 10l5 5 5-5z'/%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right 15px center;
            background-size: 15px;
            padding-right: 40px;
        }
    
        .sort-options select:focus {
            outline: none;
            box-shadow: 0 0 0 3px var(--accent-color);
        }
    
        .poem-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 30px;
        }
    
        .poem-card {
            background-color: var(--card-color);
            border-radius: var(--border-radius);
            padding: 2rem;
            box-shadow: var(--shadow);
            transition: var(--transition);
            border: 1px solid rgba(0, 0, 0, 0.05);
            display: flex;
            flex-direction: column;
            height: 100%;
        }
    
        .poem-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
        }
    
        .poem-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 1.5rem;
        }
    
        .poem-author {
            display: flex;
            align-items: center;
        }
    
        .poem-author img {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            object-fit: cover;
            margin-right: 15px;
            border: 2px solid var(--accent-color);
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }
    
        .poem-author-info h4 {
            font-size: 1.1rem;
            font-weight: 600;
            margin-bottom: 3px;
        }
    
        .poem-author-info p {
            font-size: 0.9rem;
            color: #777;
        }
    
        [data-theme="dark"] .poem-author-info p {
            color: #aaa;
        }
    
        .poem-category {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            padding: 5px 15px;
            border-radius: 30px;
            font-size: 0.85rem;
            font-weight: 500;
        }
    
        .poem-content {
            margin-bottom: 2rem;
            flex-grow: 1;
        }
    
        .poem-content h3 {
            font-size: 1.6rem;
            margin-bottom: 1.5rem;
            color: var(--primary-color);
            font-weight: 600;
            line-height: 1.3;
            font-family: 'Playfair Display', serif;
        }
    
        .poem-content p {
            font-size: 1.1rem;
            line-height: 1.9;
            white-space: pre-line;
            color: var(--text-color);
            opacity: 0.9;
        }
    
        .poem-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-top: 1px solid rgba(0, 0, 0, 0.1);
            padding-top: 1.5rem;
            margin-top: auto;
        }
    
        .poem-actions {
            display: flex;
            gap: 20px;
        }
    
        .poem-actions button {
            background: none;
            border: none;
            color: var(--secondary-color);
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 8px;
            font-size: 1rem;
            padding: 6px 12px;
            border-radius: 20px;
            transition: var(--transition);
        }
    
        .poem-actions button:hover {
            color: var(--primary-color);
            background-color: rgba(156, 39, 176, 0.1);
            transform: translateY(-2px);
        }
    
        .poem-actions button i {
            font-size: 1.2rem;
        }
    
        .poem-date {
            font-size: 0.9rem;
            color: #777;
        }
    
        [data-theme="dark"] .poem-date {
            color: #aaa;
        }
    
        /* Submit Poem Modal */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.8);
            z-index: 1000;
            justify-content: center;
            align-items: center;
            backdrop-filter: blur(8px);
            animation: fadeIn 0.3s ease-out;
        }
    
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
    
        .modal-content {
            background-color: var(--card-color);
            padding: 3rem;
            border-radius: var(--border-radius);
            width: 90%;
            max-width: 700px;
            max-height: 90vh;
            overflow-y: auto;
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.3);
            position: relative;
            animation: slideUp 0.4s ease-out;
        }
    
        @keyframes slideUp {
            from { transform: translateY(50px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }
    
        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2.5rem;
        }
    
        .modal-header h2 {
            color: var(--primary-color);
            font-size: 2rem;
            font-weight: 700;
            font-family: 'Playfair Display', serif;
        }
    
        .close-modal {
            background: none;
            border: none;
            font-size: 2rem;
            cursor: pointer;
            color: var(--text-color);
            transition: transform 0.3s;
            padding: 5px;
            line-height: 1;
        }
    
        .close-modal:hover {
            transform: rotate(90deg);
            color: var(--secondary-color);
        }
    
        .form-group {
            margin-bottom: 2rem;
        }
    
        .form-group label {
            display: block;
            margin-bottom: 1rem;
            font-weight: 600;
            color: var(--text-color);
            font-size: 1.1rem;
        }
    
        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 15px 20px;
            border-radius: var(--border-radius);
            border: 1px solid #ddd;
            background-color: var(--card-color);
            color: var(--text-color);
            font-size: 1.1rem;
            transition: var(--transition);
        }
    
        .form-group input:focus,
        .form-group select:focus,
        .form-group textarea:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px var(--accent-color);
        }
    
        .form-group textarea {
            min-height: 200px;
            resize: vertical;
            line-height: 1.8;
        }
    
        .submit-button {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            border: none;
            padding: 16px 32px;
            border-radius: 30px;
            cursor: pointer;
            font-size: 1.2rem;
            font-weight: 700;
            transition: var(--transition);
            width: 100%;
            margin-top: 1.5rem;
            letter-spacing: 0.5px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
            position: relative;
            overflow: hidden;
        }
    
        .submit-button:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
        }
    
        .submit-button::after {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
            transition: 0.5s;
        }
    
        .submit-button:hover::after {
            left: 100%;
        }
    
        /* Footer */
        footer {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: var(--light-text);
            padding: 5rem 0 2rem;
            margin-top: 5rem;
            position: relative;
            clip-path: polygon(0 10%, 100% 0, 100% 100%, 0% 100%);
        }
    
        .footer-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 3rem;
            margin-bottom: 3rem;
        }
    
        .footer-column h3 {
            font-size: 1.5rem;
            margin-bottom: 1.5rem;
            position: relative;
            padding-bottom: 15px;
            font-weight: 600;
            font-family: 'Playfair Display', serif;
        }
    
        .footer-column h3::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 50px;
            height: 3px;
            background-color: var(--accent-color);
            border-radius: 3px;
        }
    
        .footer-column p {
            opacity: 0.9;
            margin-bottom: 2rem;
            line-height: 1.8;
        }
    
        .footer-column ul {
            list-style: none;
        }
    
        .footer-column ul li {
            margin-bottom: 1.2rem;
        }
    
        .footer-column ul li a {
            color: var(--accent-color);
            text-decoration: none;
            transition: var(--transition);
            display: inline-block;
            padding: 3px 0;
            font-size: 1.05rem;
        }
    
        .footer-column ul li a:hover {
            color: white;
            transform: translateX(8px);
        }
    
        .social-links {
            display: flex;
            gap: 20px;
            margin-top: 2rem;
        }
    
        .social-links a {
            color: var(--light-text);
            font-size: 1.5rem;
            transition: var(--transition);
            display: flex;
            align-items: center;
            justify-content: center;
            width: 45px;
            height: 45px;
            border-radius: 50%;
            background-color: rgba(255, 255, 255, 0.1);
        }
    
        .social-links a:hover {
            color: var(--accent-color);
            background-color: rgba(255, 255, 255, 0.2);
            transform: translateY(-5px);
        }
    
        .copyright {
            text-align: center;
            padding-top: 3rem;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            font-size: 1rem;
            opacity: 0.8;
        }
    
        /* Scrollbar */
        ::-webkit-scrollbar {
            width: 10px;
        }
    
        ::-webkit-scrollbar-track {
            background: var(--bg-color);
        }
    
        ::-webkit-scrollbar-thumb {
            background: var(--primary-color);
            border-radius: 5px;
        }
    
        ::-webkit-scrollbar-thumb:hover {
            background: var(--secondary-color);
        }
    
        /* Responsive Design */
        @media (max-width: 1200px) {
            .hero h1 {
                font-size: 3rem;
            }
        }
    
        @media (max-width: 992px) {
            .hero {
                padding: 6rem 0;
            }
            
            .section-title {
                font-size: 2.5rem;
            }
            
            .category-grid {
                grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            }
        }
    
        @media (max-width: 768px) {
            .header-container {
                flex-direction: column;
                gap: 20px;
                padding-bottom: 20px;
            }
    
            nav ul {
                margin-top: 15px;
                flex-wrap: wrap;
                justify-content: center;
                gap: 15px;
            }
    
            nav ul li {
                margin-left: 0;
            }
    
            .hero {
                padding: 5rem 0;
                clip-path: polygon(0 0, 100% 0, 100% 95%, 0 100%);
            }
    
            .hero h1 {
                font-size: 2.5rem;
            }
    
            .hero p {
                font-size: 1.1rem;
            }
    
            .section-title {
                font-size: 2.2rem;
            }
    
            .poem-filters {
                flex-direction: column;
                gap: 20px;
            }
    
            .search-bar {
                width: 100%;
                max-width: 100%;
            }
    
            .sort-options {
                width: 100%;
                justify-content: space-between;
            }
    
            .poem-grid {
                grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            }
    
            .footer-container {
                grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                gap: 2rem;
            }
        }
    
        @media (max-width: 576px) {
            .hero h1 {
                font-size: 2rem;
            }
    
            .hero p {
                font-size: 1rem;
            }
    
            .section-title {
                font-size: 1.8rem;
            }
    
            .category-grid {
                grid-template-columns: 1fr;
            }
    
            .poem-grid {
                grid-template-columns: 1fr;
            }
    
            .modal-content {
                padding: 2rem 1.5rem;
            }
    
            .footer-container {
                grid-template-columns: 1fr;
            }
        }

        /* Voice Reader Controls */
        .voice-reader {
            position: fixed;
            bottom: 30px;
            right: 30px;
            z-index: 999;
            display: flex;
            flex-direction: column;
            align-items: flex-end;
        }
        
        .voice-reader-btn {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            border: none;
            width: 60px;
            height: 60px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
            transition: all 0.3s ease;
            font-size: 1.5rem;
        }
        
        .voice-reader-btn:hover {
            transform: scale(1.1);
        }
        
        .voice-reader-btn.active {
            background: #f44336;
            animation: pulse 1.5s infinite;
        }
        
        @keyframes pulse {
            0% { box-shadow: 0 0 0 0 rgba(244, 67, 54, 0.7); }
            70% { box-shadow: 0 0 0 15px rgba(244, 67, 54, 0); }
            100% { box-shadow: 0 0 0 0 rgba(244, 67, 54, 0); }
        }
        
        .voice-reader-options {
            background-color: var(--card-color);
            border-radius: var(--border-radius);
            padding: 1rem;
            margin-bottom: 15px;
            box-shadow: var(--shadow);
            display: none;
            width: 250px;
        }
        
        .voice-reader-options.show {
            display: block;
            animation: fadeIn 0.3s ease-out;
        }
        
        .voice-control {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }
        
        .voice-control label {
            font-weight: 500;
            color: var(--text-color);
        }
        
        .voice-control select, .voice-control input {
            background-color: var(--bg-color);
            color: var(--text-color);
            border: 1px solid var(--accent-color);
            padding: 5px 10px;
            border-radius: 4px;
        }
        
        .voice-control input[type="range"] {
            width: 100px;
        }
        
        /* Add voice reader button to poem cards */
        .poem-actions .read-btn {
            background: none;
            border: none;
            color: var(--secondary-color);
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 8px;
            font-size: 1rem;
            padding: 6px 12px;
            border-radius: 20px;
            transition: var(--transition);
        }
        
        .poem-actions .read-btn:hover {
            color: var(--primary-color);
            background-color: rgba(156, 39, 176, 0.1);
            transform: translateY(-2px);
        }
    </style>
</head>
<body>
    <!-- Header -->
    <header>
        <div class="container header-container">
            <div class="logo">
                <i class="fas fa-pen-fancy"></i>
                <span>काव्यपथ</span>
            </div>
            <nav>
                <ul>
                    <li><a href="#home">होम</a></li>
                    <li><a href="#categories">श्रेणियाँ</a></li>
                    <li><a href="#poems">कविताएँ</a></li>
                    <li><a href="#about">हमारे बारे में</a></li>
                    <li><a href="#contact">संपर्क</a></li>
                </ul>
            </nav>
            <div class="auth-buttons">
                <button id="login-btn">लॉग इन</button>
                <button id="signup-btn">साइन अप</button>
                <button class="theme-toggle" id="theme-toggle">
                    <i class="fas fa-moon"></i>
                </button>
            </div>
        </div>
    </header>

    <!-- Hero Section -->
    <section class="hero" id="home">
        <div class="container">
            <h1>हिंदी कविताओं का डिजिटल संग्रह</h1>
            <p>अपनी भावनाओं को शब्दों में पिरोएं और दुनिया के साथ साझा करें। प्रेम, विरह, देशभक्ति और अन्य विषयों पर हिंदी कविताओं का विशाल संग्रह।</p>
            <button class="cta-button" id="submit-poem-btn">कविता सबमिट करें</button>
        </div>
    </section>

    <!-- Categories Section -->
    <section class="categories" id="categories">
        <div class="container">
            <h2 class="section-title">श्रेणियाँ</h2>
            <div class="category-grid">
                <div class="category-card" data-category="prem">
                    <i class="fas fa-heart"></i>
                    <h3>प्रेम</h3>
                    <p>प्रेम और रोमांस पर कविताएँ</p>
                </div>
                <div class="category-card" data-category="virah">
                    <i class="fas fa-cloud-rain"></i>
                    <h3>विरह</h3>
                    <p>वियोग और विछोह की पीड़ा</p>
                </div>
                <div class="category-card" data-category="deshbhakti">
                    <i class="fas fa-flag"></i>
                    <h3>देशभक्ति</h3>
                    <p>देश प्रेम और राष्ट्र भक्ति</p>
                </div>
                <div class="category-card" data-category="prakriti">
                    <i class="fas fa-tree"></i>
                    <h3>प्रकृति</h3>
                    <p>प्रकृति की सुंदरता का वर्णन</p>
                </div>
                <div class="category-card" data-category="jivan">
                    <i class="fas fa-book-open"></i>
                    <h3>जीवन</h3>
                    <p>जीवन के विभिन्न पहलुओं पर</p>
                </div>
                <div class="category-card" data-category="hasya">
                    <i class="fas fa-laugh-squint"></i>
                    <h3>हास्य</h3>
                    <p>मनोरंजक और हास्य कविताएँ</p>
                </div>
            </div>
        </div>
    </section>

    <!-- Poems Section -->
    <section class="poems" id="poems">
        <div class="container">
            <h2 class="section-title">नवीनतम कविताएँ</h2>
            <div class="poem-filters">
                <div class="search-bar">
                    <i class="fas fa-search"></i>
                    <input type="text" placeholder="कविता खोजें...">
                </div>
                <div class="sort-options">
                    <span>छाँटें:</span>
                    <select id="sort-poems">
                        <option value="newest">नवीनतम</option>
                        <option value="popular">लोकप्रिय</option>
                        <option value="oldest">सबसे पुरानी</option>
                    </select>
                </div>
            </div>
            <div class="poem-grid" id="poem-grid">
                <!-- Poems will be dynamically added here -->
            </div>
        </div>
    </section>

    <!-- Submit Poem Modal -->
    <div class="modal" id="poem-modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>नई कविता सबमिट करें</h2>
                <button class="close-modal">&times;</button>
            </div>
            <form id="poem-form">
                <div class="form-group">
                    <label for="poem-title">कविता का शीर्षक</label>
                    <input type="text" id="poem-title" required>
                </div>
                <div class="form-group">
                    <label for="poem-category">श्रेणी</label>
                    <select id="poem-category" required>
                        <option value="">चुनें...</option>
                        <option value="prem">प्रेम</option>
                        <option value="virah">विरह</option>
                        <option value="deshbhakti">देशभक्ति</option>
                        <option value="prakriti">प्रकृति</option>
                        <option value="jivan">जीवन</option>
                        <option value="hasya">हास्य</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="poem-content">कविता</label>
                    <textarea id="poem-content" required></textarea>
                </div>
                <button type="submit" class="submit-button">सबमिट करें</button>
            </form>
        </div>
    </div>

    <!-- Footer -->
    <footer>
        <div class="container">
            <div class="footer-container">
                <div class="footer-column">
                    <h3>काव्यपथ</h3>
                    <p>हिंदी कविताओं का डिजिटल संग्रह जहाँ आप अपनी रचनाएँ साझा कर सकते हैं और दूसरों की रचनाओं का आनंद ले सकते हैं।</p>
                    <div class="social-links">
                        <a href="#"><i class="fab fa-facebook-f"></i></a>
                        <a href="#"><i class="fab fa-twitter"></i></a>
                        <a href="#"><i class="fab fa-instagram"></i></a>
                        <a href="#"><i class="fab fa-youtube"></i></a>
                    </div>
                </div>
                <div class="footer-column">
                    <h3>लिंक्स</h3>
                    <ul>
                        <li><a href="#home">होम</a></li>
                        <li><a href="#categories">श्रेणियाँ</a></li>
                        <li><a href="#poems">कविताएँ</a></li>
                        <li><a href="#about">हमारे बारे में</a></li>
                        <li><a href="#contact">संपर्क</a></li>
                    </ul>
                </div>
                <div class="footer-column">
                    <h3>श्रेणियाँ</h3>
                    <ul>
                        <li><a href="#" data-category="prem">प्रेम कविताएँ</a></li>
                        <li><a href="#" data-category="virah">विरह कविताएँ</a></li>
                        <li><a href="#" data-category="deshbhakti">देशभक्ति कविताएँ</a></li>
                        <li><a href="#" data-category="prakriti">प्रकृति कविताएँ</a></li>
                        <li><a href="#" data-category="jivan">जीवन कविताएँ</a></li>
                    </ul>
                </div>
                <div class="footer-column">
                    <h3>संपर्क</h3>
                    <ul>
                        <li><i class="fas fa-envelope"></i> contact@kavyapath.com</li>
                        <li><i class="fas fa-phone"></i> +91 9876543210</li>
                        <li><i class="fas fa-map-marker-alt"></i> नई दिल्ली, भारत</li>
                    </ul>
                </div>
            </div>
            <div class="copyright">
                <p>&copy; 2023 काव्यपथ. सर्वाधिकार सुरक्षित।</p>
            </div>
        </div>
    </footer>
    <!-- Add this voice reader control at the bottom of the body -->
    <div class="voice-reader">
        <div class="voice-reader-options" id="voice-reader-options">
            <div class="voice-control">
                <label for="voice-select">आवाज:</label>
                <select id="voice-select"></select>
            </div>
            <div class="voice-control">
                <label for="rate-control">गति:</label>
                <input type="range" id="rate-control" min="0.5" max="2" step="0.1" value="1">
                <span id="rate-value">1</span>
            </div>
            <div class="voice-control">
                <label for="pitch-control">तारत्व:</label>
                <input type="range" id="pitch-control" min="0.5" max="2" step="0.1" value="1">
                <span id="pitch-value">1</span>
            </div>
        </div>
        <button class="voice-reader-btn" id="voice-reader-btn">
            <i class="fas fa-volume-up"></i>
        </button>
    </div> 

    <script>
        // Sample data for poems
        const poems = [
            {
                id: 1,
                title: "तुम और मैं",
                content: "तुम और मैं,\nएक साथ चलते हैं,\nजैसे दो पंछी,\nएक ही आसमान में उड़ते हैं।\n\nकभी धूप, कभी छाँव,\nपर साथ नहीं छूटते,\nयही तो है प्यार,\nयही तो है जीवन।",
                author: {
                    name: "राहुल शर्मा",
                    avatar: "https://randomuser.me/api/portraits/men/32.jpg"
                },
                category: "prem",
                likes: 24,
                comments: 5,
                date: "2 दिन पहले"
            },
            {
                id: 2,
                title: "माँ तुझे सलाम",
                content: "तेरे कोमल हाथों की छाँव में,\nबड़ा हुआ हूँ माँ तेरे प्यार में।\nतेरी ममता की बुनियाद पर,\nखड़ा है मेरा ये विश्वास भरा संसार।\n\nमाँ तुझे सलाम,\nतेरे बिना अधूरा है ये जहाँ।",
                author: {
                    name: "प्रिया पाटिल",
                    avatar: "https://randomuser.me/api/portraits/women/44.jpg"
                },
                category: "deshbhakti",
                likes: 42,
                comments: 8,
                date: "1 सप्ताह पहले"
            },
            {
                id: 3,
                title: "बारिश की बूंदें",
                content: "बारिश की बूंदें गिर रही हैं,\nधरती पर खुशियाँ बिखर रही हैं।\nहर पत्ता, हर फूल,\nमुस्कुरा रहा है भरपूर।\n\nप्रकृति का ये उपहार,\nले आता है नया संसार।",
                author: {
                    name: "अमित सिंह",
                    avatar: "https://randomuser.me/api/portraits/men/67.jpg"
                },
                category: "prakriti",
                likes: 18,
                comments: 3,
                date: "3 दिन पहले"
            },
            {
                id: 4,
                title: "जुदाई का दर्द",
                content: "तुम्हारी यादों ने घेर लिया है,\nजैसे चारों ओर अंधेरा छा गया है।\nहर पल तुम्हारी कमी खलती है,\nजैसे दिल का कोई टुकड़ा टूट गया है।\n\nकब मिलोगे फिर से पास,\nये सवाल हर पल सताता है।",
                author: {
                    name: "नीतू गुप्ता",
                    avatar: "https://randomuser.me/api/portraits/women/63.jpg"
                },
                category: "virah",
                likes: 31,
                comments: 7,
                date: "5 दिन पहले"
            },
            {
                id: 5,
                title: "हँसते रहो",
                content: "जिंदगी है छोटी सी,\nगमों को क्यों पालो।\nहर पल मुस्कुराओ,\nखुशियाँ बाँटो सारे जहाँ में।\n\nहँसते रहो, हँसाते रहो,\nयही तो है जीने का असली मतलब।",
                author: {
                    name: "राजीव वर्मा",
                    avatar: "https://randomuser.me/api/portraits/men/75.jpg"
                },
                category: "jivan",
                likes: 15,
                comments: 2,
                date: "1 दिन पहले"
            },
            {
                id: 6,
                title: "मेरा भारत",
                content: "सजीव है तेरी संस्कृति,\nअमर है तेरा इतिहास।\nविविधताओं में एकता का,\nतेरा ही तो है विश्वास।\n\nमेरा भारत महान,\nतेरी शान में मेरी शान।",
                author: {
                    name: "सुमन राव",
                    avatar: "https://randomuser.me/api/portraits/women/82.jpg"
                },
                category: "deshbhakti",
                likes: 56,
                comments: 12,
                date: "2 सप्ताह पहले"
            }
        ];

        // DOM Elements
        const poemGrid = document.getElementById('poem-grid');
        const poemModal = document.getElementById('poem-modal');
        const submitPoemBtn = document.getElementById('submit-poem-btn');
        const closeModal = document.querySelector('.close-modal');
        const poemForm = document.getElementById('poem-form');
        const themeToggle = document.getElementById('theme-toggle');
        const categoryCards = document.querySelectorAll('.category-card');
        const searchInput = document.querySelector('.search-bar input');
        const sortSelect = document.getElementById('sort-poems');

        // Display poems
        function displayPoems(poemsToDisplay) {
            poemGrid.innerHTML = '';
            
            poemsToDisplay.forEach(poem => {
                const poemCard = document.createElement('div');
                poemCard.className = 'poem-card';
                
                // Get category name in Hindi
                let categoryName = '';
                switch(poem.category) {
                    case 'prem':
                        categoryName = 'प्रेम';
                        break;
                    case 'virah':
                        categoryName = 'विरह';
                        break;
                    case 'deshbhakti':
                        categoryName = 'देशभक्ति';
                        break;
                    case 'prakriti':
                        categoryName = 'प्रकृति';
                        break;
                    case 'jivan':
                        categoryName = 'जीवन';
                        break;
                    case 'hasya':
                        categoryName = 'हास्य';
                        break;
                    default:
                        categoryName = poem.category;
                }
                
                poemCard.innerHTML = `
                    <div class="poem-header">
                        <div class="poem-author">
                            <img src="${poem.author.avatar}" alt="${poem.author.name}">
                            <div class="poem-author-info">
                                <h4>${poem.author.name}</h4>
                                <p>@${poem.author.name.replace(/\s+/g, '').toLowerCase()}</p>
                            </div>
                        </div>
                        <span class="poem-category">${categoryName}</span>
                    </div>
                    <div class="poem-content">
                        <h3>${poem.title}</h3>
                        <p>${poem.content}</p>
                    </div>
                    <div class="poem-footer">
                        <div class="poem-actions">
                            <button class="like-btn" data-id="${poem.id}">
                                <i class="fas fa-heart"></i> ${poem.likes}
                            </button>
                            <button class="comment-btn">
                                <i class="fas fa-comment"></i> ${poem.comments}
                            </button>
                            <button class="share-btn">
                                <i class="fas fa-share"></i>
                            </button>
                        </div>
                        <div class="poem-date">${poem.date}</div>
                    </div>
                `;
                
                poemGrid.appendChild(poemCard);
            });
            
            // Add event listeners to like buttons
            document.querySelectorAll('.like-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    const poemId = parseInt(this.getAttribute('data-id'));
                    const poem = poems.find(p => p.id === poemId);
                    if (poem) {
                        poem.likes++;
                        this.innerHTML = `<i class="fas fa-heart"></i> ${poem.likes}`;
                        this.style.color = 'red';
                    }
                });
            });
        }

        // Filter poems by category
        function filterPoemsByCategory(category) {
            if (category === 'all') {
                displayPoems(poems);
            } else {
                const filteredPoems = poems.filter(poem => poem.category === category);
                displayPoems(filteredPoems);
            }
        }

        // Search poems
        function searchPoems(query) {
            const lowerCaseQuery = query.toLowerCase();
            const searchedPoems = poems.filter(poem => 
                poem.title.toLowerCase().includes(lowerCaseQuery) || 
                poem.content.toLowerCase().includes(lowerCaseQuery) ||
                poem.author.name.toLowerCase().includes(lowerCaseQuery)
            );
            displayPoems(searchedPoems);
        }

        // Sort poems
        function sortPoems(sortBy) {
            let sortedPoems = [...poems];
            
            switch(sortBy) {
                case 'newest':
                    // Already sorted by newest in sample data
                    break;
                case 'oldest':
                    sortedPoems.reverse();
                    break;
                case 'popular':
                    sortedPoems.sort((a, b) => b.likes - a.likes);
                    break;
            }
            
            displayPoems(sortedPoems);
        }

        // Theme toggle
        function toggleTheme() {
            const currentTheme = document.documentElement.getAttribute('data-theme');
            if (currentTheme === 'dark') {
                document.documentElement.removeAttribute('data-theme');
                themeToggle.innerHTML = '<i class="fas fa-moon"></i>';
                localStorage.setItem('theme', 'light');
            } else {
                document.documentElement.setAttribute('data-theme', 'dark');
                themeToggle.innerHTML = '<i class="fas fa-sun"></i>';
                localStorage.setItem('theme', 'dark');
            }
        }

        // Check for saved theme preference
        const savedTheme = localStorage.getItem('theme');
        if (savedTheme === 'dark') {
            document.documentElement.setAttribute('data-theme', 'dark');
            themeToggle.innerHTML = '<i class="fas fa-sun"></i>';
        }

        // Event Listeners
        submitPoemBtn.addEventListener('click', () => {
            poemModal.style.display = 'flex';
        });

        closeModal.addEventListener('click', () => {
            poemModal.style.display = 'none';
        });

        window.addEventListener('click', (e) => {
            if (e.target === poemModal) {
                poemModal.style.display = 'none';
            }
        });

        poemForm.addEventListener('submit', (e) => {
            e.preventDefault();
            
            const title = document.getElementById('poem-title').value;
            const category = document.getElementById('poem-category').value;
            const content = document.getElementById('poem-content').value;
            
            if (title && category && content) {
                // Create new poem object
                const newPoem = {
                    id: poems.length + 1,
                    title: title,
                    content: content,
                    author: {
                        name: "आप",
                        avatar: "https://randomuser.me/api/portraits/lego/1.jpg"
                    },
                    category: category,
                    likes: 0,
                    comments: 0,
                    date: "अभी अभी"
                };
                
                // Add to poems array
                poems.unshift(newPoem);
                
                // Reset form
                poemForm.reset();
                
                // Close modal
                poemModal.style.display = 'none';
                
                // Display poems
                displayPoems(poems);
                
                // Show success message
                alert('आपकी कविता सफलतापूर्वक सबमिट कर दी गई है!');
            }
        });

        themeToggle.addEventListener('click', toggleTheme);

        categoryCards.forEach(card => {
            card.addEventListener('click', () => {
                const category = card.getAttribute('data-category');
                filterPoemsByCategory(category);
                
                // Scroll to poems section
                document.getElementById('poems').scrollIntoView({ behavior: 'smooth' });
            });
        });

        searchInput.addEventListener('input', (e) => {
            searchPoems(e.target.value);
        });

        sortSelect.addEventListener('change', (e) => {
            sortPoems(e.target.value);
        });

        // Footer category links
        document.querySelectorAll('.footer-column ul li a[data-category]').forEach(link => {
            link.addEventListener('click', (e) => {
                e.preventDefault();
                const category = link.getAttribute('data-category');
                filterPoemsByCategory(category);
                
                // Scroll to poems section
                document.getElementById('poems').scrollIntoView({ behavior: 'smooth' });
            });
        });

        // Initialize by displaying all poems
        displayPoems(poems);

        // Add these new variables at the top of your script
        let speechSynthesis = window.speechSynthesis;
        let voices = [];
        let currentSpeech = null;
        let isReading = false;
        
        // Voice Reader Functions
        function populateVoiceList() {
            voices = speechSynthesis.getVoices();
            const voiceSelect = document.getElementById("voice-select");
            voiceSelect.innerHTML = '';
            
            // Try to find Hindi voices first
            let hindiVoices = voices.filter(voice => voice.lang.includes('hi') || voice.lang.includes('IN'));
            
            // If no Hindi voices, show all available voices
            const voicesToShow = hindiVoices.length > 0 ? hindiVoices : voices;
            
            voicesToShow.forEach(voice => {
                const option = document.createElement("option");
                option.textContent = `${voice.name} (${voice.lang})`;
                
                if (voice.default) {
                    option.textContent += " — DEFAULT";
                }
                
                option.setAttribute("data-lang", voice.lang);
                option.setAttribute("data-name", voice.name);
                voiceSelect.appendChild(option);
            });
        }
        
        function readPoem(poemId) {
            const poem = poems.find(p => p.id === poemId);
            if (!poem) return;
            
            // Stop any current speech
            if (isReading) {
                speechSynthesis.cancel();
                isReading = false;
                document.getElementById('voice-reader-btn').classList.remove('active');
                return;
            }
            
            const voiceSelect = document.getElementById("voice-select");
            const rateControl = document.getElementById("rate-control");
            const pitchControl = document.getElementById("pitch-control");
            
            const utterance = new SpeechSynthesisUtterance();
            utterance.text = `${poem.title}\n\n${poem.content}`;
            
            const selectedOption = voiceSelect.selectedOptions[0].getAttribute("data-name");
            if (selectedOption) {
                utterance.voice = voices.find(voice => voice.name === selectedOption);
            }
            
            utterance.rate = parseFloat(rateControl.value);
            utterance.pitch = parseFloat(pitchControl.value);
            
            utterance.onstart = () => {
                isReading = true;
                document.getElementById('voice-reader-btn').classList.add('active');
            };
            
            utterance.onend = () => {
                isReading = false;
                document.getElementById('voice-reader-btn').classList.remove('active');
            };
            
            utterance.onerror = (event) => {
                console.error("SpeechSynthesis error:", event);
                isReading = false;
                document.getElementById('voice-reader-btn').classList.remove('active');
                alert("आवाज पढ़ने में त्रुटि: " + event.error);
            };
            
            currentSpeech = utterance;
            speechSynthesis.speak(utterance);
        }
        
        function toggleVoiceReaderOptions() {
            const options = document.getElementById('voice-reader-options');
            options.classList.toggle('show');
        }
        
        // Initialize voice reader when voices are loaded
        speechSynthesis.onvoiceschanged = populateVoiceList;
        
        // Call it initially in case voices are already loaded
        populateVoiceList();
        
        // Add these event listeners at the end of your existing script
        document.getElementById('voice-reader-btn').addEventListener('click', toggleVoiceReaderOptions);
        
        // Update rate and pitch value displays
        document.getElementById('rate-control').addEventListener('input', function() {
            document.getElementById('rate-value').textContent = this.value;
        });
        
        document.getElementById('pitch-control').addEventListener('input', function() {
            document.getElementById('pitch-value').textContent = this.value;
        });
        
        // Add event delegation for read buttons (since they're dynamically added)
        document.addEventListener('click', function(e) {
            if (e.target.closest('.read-btn')) {
                const poemId = parseInt(e.target.closest('.read-btn').getAttribute('data-id'));
                readPoem(poemId);
            }
        });
        
        // Stop speech when modal opens or page changes
        document.getElementById('submit-poem-btn').addEventListener('click', function() {
            if (isReading) {
                speechSynthesis.cancel();
                isReading = false;
                document.getElementById('voice-reader-btn').classList.remove('active');
            }
        });
        
        // Also stop speech when clicking on category cards
        categoryCards.forEach(card => {
            card.addEventListener('click', () => {
                if (isReading) {
                    speechSynthesis.cancel();
                    isReading = false;
                    document.getElementById('voice-reader-btn').classList.remove('active');
                }
            });
        });
    </script>
</body>
</html>
